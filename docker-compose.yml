version: '3.1'

services:

  client:
    build:
      context: client/.
    command: ng serve --watch --host 0.0.0.0
    ports:
      - "4200:4200"
    volumes: 
      - $DOCKER_MOUNT_ROOT/client:/opt/app:delegated
      # bind-mounting these two files in will let you add packages during development without rebuilding
      # for example, to add bower to your app while developing, just install it inside the container
      # and then nodemon will restart. Your changes will last until you "docker-compose down" and will
      # be saved on host for next build
      # docker-compose exec node npm install --save bower
      - $DOCKER_MOUNT_ROOT/client/package.json:/opt/package.json
      - $DOCKER_MOUNT_ROOT/client/package-lock.json:/opt/package-lock.json
      - notused_client:/opt/app/node_modules

  server:
    build: 
      context: server/.
      args:
        - NODE_ENV=development
    command: nodemon --inspect index.js 0.0.0.0:9229
    ports:
      - "80:80"
      - "9229:9229"
      - "9230:9230"
    volumes: 
      - $DOCKER_MOUNT_ROOT/server:/opt/app:delegated
      # bind-mounting these two files in will let you add packages during development without rebuilding
      # for example, to add bower to your app while developing, just install it inside the container
      # and then nodemon will restart. Your changes will last until you "docker-compose down" and will
      # be saved on host for next build
      # docker-compose exec node npm install --save bower
      - $DOCKER_MOUNT_ROOT/server/package.json:/opt/package.json
      - $DOCKER_MOUNT_ROOT/server/package-lock.json:/opt/package-lock.json
      - notused_server:/opt/app/node_modules
    environment:
      - NODE_ENV=development

  db:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - $DOCKER_MOUNT_ROOT/data:/data/db

volumes:
  notused_client:
  notused_server:
